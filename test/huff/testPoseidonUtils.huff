/// @title Test Poseidon Utils
/// @author @joeykraut
/// @notice Test the utils for the Poseidon2 permutation

#include "../../src/crypto/poseidon2/roundUtils.huff"

/// @dev Test the sbox function applied to a single input
#define function testSboxSingle(uint256) nonpayable returns(uint256) 

/// @dev Entrypoint to the poseidon test suite
#define macro MAIN() = takes(0) returns(0) {
    // Get the function selector
    0x0 calldataload 0xe0 shr // [SELECTOR]
    __FUNC_SIG(testSboxSingle) eq testSboxSingle jumpi

    // Revert if the function selector is not valid
    0x1 0x0 mstore
    0x1 0x0 revert

    testSboxSingle:
        TEST_SBOX_SINGLE()
}

/// @notice Test the sbox function applied to a single input
#define macro TEST_SBOX_SINGLE() = takes(0) returns(0) {
    // Get the input from calldata 
    PUSH_PRIME()
    0x04 calldataload

    // Call the sbox function
    SBOX()

    // Return the result
    0x00 mstore
    0x20 0x00 return
}
